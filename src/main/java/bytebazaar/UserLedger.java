package bytebazaar;

import java.util.LinkedList;

public class UserLedger {
    private LinkedList<User> userLedger; // list of buyers,but not the complete list
    private User currentUser; // reference to current buyer will be stored when logged in

    public UserLedger() {
        userLedger = new LinkedList<User>();
    }

    // This fucntion creates NEW user as buyer(Default) and returns the newly
    // assigned UserID
    // which is autogenerated by DB (using identity)
    // Note: -1 means failed to save, -2 means sql exception occurred
    public int createUser(String name, String email, String phone, String password) {
        if (DBHandler.getInstance().checkUserExists(email) == false) {
            Buyer b = new Buyer(email, password, phone, name);
            // User a = new Buyer(email, password, phone, name);

            int returnID = DBHandler.getInstance().save(b);
            if (returnID > 0) { // no error occurred;
                b.setID(returnID);
                this.userLedger.add(b); // save to the ledger ,for quick reference, as most will login after signup.
            }
            return returnID;
        } else {
            // An acc already exists with this email
            return -1;
        }
    }

    public boolean loginRequest(String email, String password, String userType) {
        // TODO Check in ledger to authenticate email if user already there
        if (userType == "Buyer") {
            Buyer b = DBHandler.getInstance().authenticateBuyerLogin(email, password);
            if (b != null) {
                currentUser = b;
                currentUser.setDetails();//will call the buyer's setdetails func, to create cart and orderlog
                userLedger.add(b);
                return true;
            } else {
                System.out.println("authenticate login returned null for buyerrr");
                return false;
            }
        } else if (userType == "Seller") {
            Seller s = DBHandler.getInstance().authenticateSellerLogin(email, password);
            if (s != null) {
                currentUser = s;
                currentUser.setDetails();//will call the seller's setdetails func, to add order-recieved log and product catalog
                userLedger.add(s);
                return true;
            } else {
                System.out.println("authenticate login returned null for seller");
                return false;
            }
        } else {
            return false;
        }

    }
}
